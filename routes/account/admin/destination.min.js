'use strict';const express=require("express"),app=express(),router=express.Router(),Destination=require("../../../models/Destination"),faker=require("faker"),{userAuth}=require("../../../helpers/authenticate");router.all("/*",(b,c,a)=>{b.app.locals.layout="admin";a()});router.get("/",(b,c)=>{Destination.find().then(a=>{c.render("admin/destination",{destinations:a})}).catch(a=>console.log(a))});
router.post("/create",(b,c)=>{const a=new Destination;a.title=b.body.title;a.date=new Date;a.save().then(d=>{b.flash("success_msg",`${d.title} created successfully :)`);c.redirect("/admin/destinations")}).catch(d=>console.log(d))});
router.post("/dummy",(b,c)=>{for(let a=0;a<b.body.number;a++){const d=new Destination;d.title=faker.lorem.word();d.date=new Date;d.save().then(e=>{b.flash("success_msg",`${b.body.number} dummy destinations successfully created  :)`);c.redirect("/admin/destinations")}).catch(e=>console.log(e))}});
router.put("/:id/edit",(b,c)=>{Destination.findOne({_id:b.params.id}).then(a=>{a.title=b.body.title;a.save().then(d=>{b.flash("success_msg",`${d.title} has been updated successfully :)`);c.redirect("/admin/destinations")})}).catch(a=>console.log(a))});router.delete("/:id/delete",(b,c)=>{Destination.findOne({_id:b.params.id}).then(a=>{b.flash("success_msg",`${a.title} has been deleted successfully :)`);c.redirect("/admin/destinations")}).catch(a=>console.log(a))});module.exports=router;