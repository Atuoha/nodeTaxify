'use strict';const express=require("express"),app=express(),router=express.Router(),Testimony=require("../../../models/Testimony"),faker=require("faker"),{userAuth}=require("../../../helpers/authenticate");router.all("/*",(b,c,a)=>{b.app.locals.layout="admin";a()});router.get("/",(b,c)=>{Testimony.find().populate("user").then(a=>{c.render("accounts/admin/testimony",{testimonies:a})}).catch(a=>console.log(a))});
router.post("/create",(b,c)=>{const a=new Testimony;a.content=b.body.content;a.user=b.session.user;a.save().then(d=>{b.flash("success_msg","Testimony has been created successfully :)");c.redirect("/admin/testimonies")}).catch(d=>console.log(d))});
router.post("/dummy",(b,c)=>{for(let a=0;a<b.body.number;a++){const d=new Testimony;d.content=faker.lorem.sentence();d.user=b.session.user;d.save().then(e=>{b.flash("success_msg",`${b.body.number} dummy testimonies successfully created  :)`);c.redirect("/admin/testimonies")}).catch(e=>console.log(e))}});
router.put("/:id/update",(b,c)=>{Testimony.findOne({_id:b.params.id}).then(a=>{a.content=b.body.content;a.save().then(d=>{b.flash("success_msg","Testimony has been updated successfully :)");c.redirect("/admin/testimonies")})}).catch(a=>console.log(a))});router.delete("/:id/delete",(b,c)=>{Testimony.findOne({_id:b.params.id}).then(a=>{a.delete().then(d=>{b.flash("success_msg","Testimony has been deleted successfully :)");c.redirect("/admin/testimonies")}).catch(d=>console.log(d))}).catch(a=>console.log(a))});
module.exports=router;