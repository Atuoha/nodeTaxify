'use strict';const express=require("express"),app=express(),router=express.Router(),User=require("../../../models/User"),fs=require("fs"),{isEmpty,uploadDir}=require("../../../helpers/upload-helpers"),faker=require("faker"),bcrypt=require("bcryptjs");router.all("/*",(b,d,a)=>{b.app.locals.layout="admin";a()});router.get("/",(b,d)=>{User.find().then(a=>{d.render("accounts/admin/users",{users:a})}).catch(a=>console.log(a))});router.get("/create",(b,d)=>{d.render("accounts/admin/users/create")});
router.get("/dummy",(b,d)=>{d.render("accounts/admin/users/dummy")});router.get("/:id/edit",(b,d)=>{User.findOne({_id:b.params.id}).then(a=>{d.render("accounts/admin/users/edit",{user:a})}).catch(a=>console.log(a))});
router.post("/create",(b,d)=>{User.findOne({email:b.body.email}).then(a=>{if(a)b.flash("error_msg","Email already exists :)"),d.redirect("/admin/users");else{a="";if(!isEmpty(b.files)){let f=b.files.file;a=Date.now()+"-"+f.name;f.mv("./public/uploads/"+a,e=>{e&&console.log(e)})}const c=new User;c.fullname=b.body.fullname;c.email=b.body.email;c.status=b.body.status;c.role=b.body.role;c.password=b.body.password;c.file=a;bcrypt.genSalt(10,(f,e)=>{bcrypt.hash(b.body.password,e,(g,k)=>{g&&console.log(g);
c.password=k;c.save().then(h=>{b.flash("success_msg","New User Created :)");d.redirect("/admin/users")}).catch(h=>console.log(h))})})}}).catch(a=>console.log(a))});
router.post("/dummy",(b,d)=>{for(let a=0;a<b.body.numbers;a++){const c=new User;c.fullname=faker.name.firstName()+" "+faker.name.lastName();c.email=faker.internet.email();c.phone="+234-000-0000-000";c.role="Subscriber";c.status="Active";c.file="default.png";c.password="secret";bcrypt.genSalt(10,(f,e)=>{bcrypt.hash("secret",e,(g,k)=>{g&&console.log(g);c.password=k;c.save().then(h=>{b.flash("success_msg",`${b.body.numbers} dummy users have been created :)`);d.redirect("/admin/users")}).catch(h=>console.log(h))})})}});
router.put("/:id/update",(b,d)=>{User.findOne({_id:b.params.id}).then(a=>{let c=a.file;if(!isEmpty(b.files)){let f=b.files.file;c=Date.now()+"-"+f.name;f.mv("./public/uploads/"+c,e=>{e&&console.log(e)});""!==a.file&&"default.png"!==a.file&&fs.unlink("./public/uploads/"+a.file,e=>{e&&console.log(e)})}""!==b.body.password&&(a.fullname=b.body.fullname,a.email=b.body.email,a.status=b.body.status,a.role=b.body.role,a.file=c,bcrypt.genSalt(10,(f,e)=>{bcrypt.hash(b.body.password,e,(g,k)=>{g&&console.log(g);
a.password=k;a.save().then(h=>{b.flash("success_msg",`${a.fullname} has been updated successfully`);d.redirect("/admin/users")}).catch(h=>console.log(h))})}));a.fullname=b.body.fullname;a.email=b.body.email;a.status=b.body.status;a.role=b.body.role;a.file=c;a.save().then(f=>{b.flash("success_msg",`${a.fullname} has been updated successfully`);d.redirect("/admin/users")}).catch(f=>console.log(f))}).catch(a=>console.log(a))});
router.delete("/:id/delete",(b,d)=>{User.findOne({_id:b.params.id}).then(a=>{""!==a.file&&"default.png"!==a.file&&fs.unlink("./public/uploads/"+a.file,c=>{c&&console.log(c)});a.delete().then(c=>{b.flash("success_msg","User deleted successfully :) ");d.redirect("/admin/users")}).catch(c=>console.log(c))}).catch(a=>console.log(a))});module.exports=router;