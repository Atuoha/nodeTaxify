'use strict';"production"!==process.env.NODE_ENV&&require("dotenv").config();const stripeSecretKey=process.env.STRIPE_SECRET_KEY,stripePubKey=process.env.STRIPE_PUBLISHABLE_KEY,stripe=require("stripe")(stripeSecretKey),express=require("express"),app=express(),router=express.Router(),Booking=require("../../../models/Booking"),Destination=require("../../../models/Destination");router.all("/*",(b,c,a)=>{b.app.locals.layout="user";a()});
router.get("/",(b,c)=>{Booking.find({user:b.session.user}).where("status").equals("Active").populate("user").then(a=>{c.render("accounts/user/booking",{bookings:a})}).catch(a=>console.log(a))});router.get("/cancelled",(b,c)=>{Booking.find({user:b.session.user}).where("status").equals("Unactive").populate("user").then(a=>{c.render("accounts/user/booking/cancelled",{bookings:a})}).catch(a=>console.log(a))});
router.get("/create",(b,c)=>{Destination.find().then(a=>{c.render("accounts/user/booking/create",{destinations:a,stripePubKey})}).catch(a=>console.log(a))});router.get("/edit/:id",(b,c)=>{Booking.findOne({_id:b.params.id}).where("status").equals("Active").then(a=>{Destination.find().then(d=>{c.render("accounts/user/booking/edit",{booking:a,destinations:d})}).catch(d=>console.log(d))}).catch(a=>console.log(a))});
router.get("/show/:id",(b,c)=>{Booking.findOne({_id:b.params.id}).then(a=>{c.render("accounts/user/booking/show",{booking:a})}).catch(a=>console.log(a))});
router.post("/charge",(b,c)=>{stripe.customers.create({email:b.body.stripeEmail,source:b.body.stripeToken}).then(a=>stripe.charges.create({amount:100*parseFloat(b.body.price.replace("$","")),description:`${b.body.location} to ${b.body.destination} on ${b.body.plan}`,currency:"USD",customer:a.id})).then(a=>{a=new Booking;a.location=b.body.location;a.destination=b.body.destination;a.booking_time=b.body.booking_time;a.booking_date=b.body.booking_date;a.price=b.body.price;a.plan=b.body.plan;a.date=new Date;
a.user=b.session.user;a.save().then(d=>{b.flash("success_msg","Taxi booking process has been completed :)");c.redirect("/user/booking")}).catch(d=>console.log(d))}).catch(a=>console.log(a))});
router.put("/:id/update",(b,c)=>{Booking.findOne({_id:b.params.id}).then(a=>{a.location=b.body.location;a.destination=b.body.destination;a.booking_time=b.body.booking_time;a.booking_date=b.body.booking_date;newBooking.price=b.body.price;newBooking.plan=b.body.plan;a.date=new Date;newBooking.user=b.session.user;a.save().then(d=>{b.flash("success_msg","Taxi booking info has been updated successfully : )");c.redirect("/user/booking")}).catch(d=>console.log(d))}).catch(a=>console.log(a))});
router.get("/cancel/:id",(b,c)=>{Booking.findOne({_id:b.params.id}).where("status").equals("Active").then(a=>{a.status="Unactive";a.save().then(d=>{b.flash("success_msg","Taxi booking has been cancelled successfully : )");c.redirect(`/user/booking/cancelled/${b.user.id}`)}).catch(d=>console.log(d))}).catch(a=>console.log(a))});
router.get("/retrieve/:id",(b,c)=>{Booking.findOne({_id:b.params.id}).where("status").equals("Unactive").then(a=>{a.status="Active";a.save().then(d=>{b.flash("success_msg","Taxi booking has been retrieved successfully : )");c.redirect(`/user/booking/${b.user.id}`)}).catch(d=>console.log(d))}).catch(a=>console.log(a))});
router.delete("/:id/delete",(b,c)=>{Booking.findOne({_id:b.params.id}).then(a=>{a.delete().then(d=>{b.flash("success_msg","Taxi booking info has been deleted successfully : )");c.redirect(`/user/booking/${b.user.id}`)}).catch(d=>console.log(d))}).catch(a=>console.log(a))});module.exports=router;