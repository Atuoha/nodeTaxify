'use strict';const express=require("express"),app=express(),router=express.Router(),Testimony=require("../../../models/Testimony"),faker=require("faker"),{userAuth}=require("../../../helpers/authenticate");router.all("/*",(a,c,b)=>{a.app.locals.layout="user";b()});router.get("/",(a,c)=>{Testimony.find({user:a.user.id}).populate("user").then(b=>{c.render("accounts/user/testimony",{testimonies:b})}).catch(b=>console.log(b))});
router.post("/create",(a,c)=>{const b=new Testimony;b.content=a.body.content;b.user=a.user.id;b.save().then(d=>{a.flash("success_msg","Testimony has been created successfully :)");c.redirect(`/user/testimonies/${a.user.id}`)}).catch(d=>console.log(d))});
router.post("/dummy",(a,c)=>{for(let b=0;b<a.body.number;b++){const d=new Testimony;d.content=faker.lorem.sentence();d.user=a.user.id;d.save().then(e=>{a.flash("success_msg",`${a.body.number} dummy testimonies successfully created  :)`);c.redirect(`/user/testimonies/${a.user.id}`)}).catch(e=>console.log(e))}});
router.put("/:id/update",(a,c)=>{Testimony.findOne({_id:a.params.id}).then(b=>{b.content=a.body.content;b.save().then(d=>{a.flash("success_msg","Testimony has been updated successfully :)");c.redirect(`/user/testimonies/${a.user.id}`)})}).catch(b=>console.log(b))});
router.delete("/:id/delete",(a,c)=>{Testimony.findOne({_id:a.params.id}).then(b=>{b.delete().then(d=>{a.flash("success_msg","Testimony has been deleted successfully :)");c.redirect(`/user/testimonies/${a.user.id}`)}).catch(d=>console.log(d))}).catch(b=>console.log(b))});module.exports=router;